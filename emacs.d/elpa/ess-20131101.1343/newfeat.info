This is /home/melpa/melpa/working/ess-20131101.1343/newfeat.info,
produced by makeinfo version 4.13 from
/home/melpa/melpa/working/ess/doc/newfeat.texi.

Changes/Bug Fixes in 13.09-1:
   * ess-remote and TRAMP: R suport code is now downloaded in binary
     form, instead of being injected from local machine. The R code is
     stored in `~/.config/ESSR/' directory on the remote machine.

   * TRAMP: PAGER environment variable is now correctly set to
     `inferior-ess-pager'.

   * org-babel: source references of R code executed from org files
     correctly point to source references in original org files
     (version 8.2.1 or higher of org-mode is required for this feature)

   * `ess-execute' is now bound to `C-c C-e C-e' in `ess-extra-map'.

   * completion works again in `ess-execute'

   * [roxygen] evaluation commands now work in roxygen blocks.  Leading
     comments are automatically removed before the evaluation.

   * [transcript]: 'Clean Region' now works with multiline statements;
     `ess-transcript-clean-region' etc, now also correctly treat
     multiline statements, i.e., it no longer forgets the lines
     typically  preceded by "+ ".

   * [SAS] Three features/fixes with special thanks to Matthew Fidler
     https://github.com/emacs-ess/ESS/pulls/mlf176f2
     (https://github.com/emacs-ess/ESS/pulls/mlf176f2). Turn on SAS log
     mode and SAS listing mode when appropriate.  Indent comments more
     appropriately. Indent CARDS more appropriately.

   * [R] support for `prettify-symbols-mode' A contribution of RÃ¼diger
     Sonderfeld `https://github.com/emacs-ess/ESS/pull/65'

   * [SWV] knitr now evaluates in the current frame

   * [developer] ess-developer doesn't kill open DESCRIPTION files
     anymore

   * [roxygen] `ess-roxy-preview-HTML' is now on `C-c C-o C-w' and
     `ess-roxy-preview-text' is now on `C-c C-o C-t'.

   Changes/New Features in 13.09:
   * font-lock in process buffers doesn't "spill" over prompts.
     Missing closing string delimiters should not cause wrong
     fontification of the following command input.

   * [julia]: full features M-TAB completion and auto-complete support,
     which now works for modules, structures and data types.

   * [julia]: a much better eldoc showing arguments of methods and data
     type constructors

   * ESS-developer:
        - ESS-developer work-flow pattern has been streamlined:
          ESS-developer is now automatically activated on per-file
          basis if the   file is part of a developed package
          `ess-developer-packages'. The   old behavior (activation on
          per-process basis) is still available on   `M-x
          ess-developer' in a process buffer.

        - integration with `devtools' package. New command
          `ess-developer-load-package' calls `load_all' on the package
          containing current file. `ess-developer-add-package' now
          offers IDO   menu completions with available loading methods,
          currently   `library', and `load_all'. Loading command can be
          customized   with `ess-developer-load-on-add-commands'.

   * `TAB' now indents region if region is active (a contribution of
     Matthew Fidler in pull #41)

   * `M-x ess-version' now reports full loading path and recognizes git
     and ELPA versions.

   * warning and error keyword are now highlighted with
     `font-lock-warning-face' as they should be, (for quite some time
     these keywords have been hijacked by compilation mode
     fontification).

   * eldoc: Eldoc now recognizes multiple processes.  If current
     process is busy, or current buffer is not associated with a
     process, eldoc picks its completions from the first available free
     process.

   * org-babel: evaluation is now org-friendly

   * help: new help buffers now try to reuse ess-help buffers.  This
     behavior is controlled by `ess-help-reuse-window' custom variable.

   * help: ?foo pops IDO menu on multiple help files (so far it worked
     only for `C-c C-v')

   * remote evaluation is considerably faster now on slow connections

   * [R] tracebug R source references regular expressions are (mostly)
     language agnostic.

   * `ess-function-call-face' inherits from
     `font-lock-function-name-face' rather than
     `font-lock-builtin-face'.

   * `ess-inject-source' now accepts `function-and-buffer' option.

   * Documentation: The "New Features" section (and `NEWS') now
     represent recent changes: within the last year or so.  All changes
     can be found in the new news.html (news.html) (or `NEWS' and
     `ONEWS').

   * [R] `ess-rep-regexp' should no longer inf.loop (rarely!), and
     hence `M-x ess-fix-miscellaneous' should neither.

   Changes/New Features in 13.05:
   * [gretl]: Support for `gretl' (both editing and sub-process
     interaction). A contribution of Ahmadou Dicko.

   * : process output display is 4-10 times faster due to new caching
     and only occasional emacs re-display (for the moment this
     functionality is available only when `ess-tracebug' is active).

   * : `C-c `' is now bound to `ess-show-traceback' and `C-c ~' is
     bound to `ess-show-call-stack'.

   * [R]: ESS stores function in 'ESSR' environment to avoid kludging
     users' global environment and accidental deletion.

   * [R]: new variable `ess-swv-processing-command' to control weaving
     and tangling.

   * [R]: `ess-default-style' has been changed  (from `DEFAULT') to
     `RRR'.  Use something like  `(setq ess-default-style 'DEFAULT)' or
     `(setq ess-indent-level 2)' in your `~/.emacs' equivalent
     _before_ loading ESS, if you do not like this new "incompatible"
     default style.

   * [julia]: ESS stores its functions in 'ESS' module.

   * [julia]: Eldoc is now supported in julia modes

   * [julia]: Adjusted error reference detection and interactive help
     to julia internal changes

   * [R]: `ess-use-tracebug''s default has been changed to  `t'. Set it
     to nil if you want to keep the previous behavior.

   * [tracebug]: Electric debug keys have been removed [breaking change]
     The functionality was replaced with `ess-debug-minor-mode' and
     `ess-debug-minor-mode-map'.

   * [tracebug]: `ess-tracebug-map' is an alias to  `ess-dev-map' `C-c
     C-t'.

   * [tracebug]: `ess-bp-toggle-state' (`C-c C-t o')  can now be used
     during the debug session to toggle breakpoints on the fly
     (suggestion by Ross Boylan).

   * [tracebug]: `ess-debug-flag-for-debugging' and
     `ess-debug-unflag-for-debugging' work correctly from the debugging
     contexts. These commands also recognize non-exported functions for
     the  packages listed in `ess-developer-packages' (`C-c C-t C-a').

   * [R]: Eldoc (activated by `ess-use-eldoc') has  become more
     sophisticated, and hence also more intruding in the interface
     between the Statistics softare, e.g., , and the user.

     Note that you can turn off ElDoc, by placing `(setq ess-use-eldoc
     nil)'  in your `~/.emacs' file, prior to loading ESS,

   * [SAS]: long over-looked `SAS-mode-hook' appears!

   * [SAS]: `ess-sas-edit-keys-toggle' now defaults to `t' since
     `sas-indent-line' is still broken, i.e. `TAB' is now bound to
     `ess-sas-tab-to-tab-stop' by default

   Changes/Bug Fixes in 12.09-2:
   * : new `ess-switch-to-end-of-proc-buffer' variable that controls
     whether `C-c C-z' switches to the end of process buffer. The
     default is `t'. You can use prefix argument to `C-c C-z' to
     toggle this variable.

   * : fix in `ess-eval-linewise' that was causing emacs to hang during
     R debugging with `ess-eval-visibly' equal to `t'.

   * : fix in `ess-eval-linewise' that was causing emacs to recenter
     the prompt in visible window

   * [tracebug]: A better handling of "Selection" prompts and debug
     related singlekey commands.

