This is /home/melpa/melpa/working/ess-20131101.1343/bugs-ms.info,
produced by makeinfo version 4.13 from
/home/melpa/melpa/working/ess/doc/bugs-ms.texi.

See the file `README.SPLUS4WIN' as well, for more information and
details.

   * (RMH) system freeze and ctrl-m, a solution for some cases.

     	Frequently, when the *shell* buffer freezes while running
     either COMMAND.COM or a DOS or Windows program initiated by
     command.com, it can be unfrozen by entering the key sequence
     C-q C-m RET into the frozen buffer.

     	What I think is happening is the coding-system got confused.
     Command.com is waiting for the C-m C-l sequence and it only
     sees the C-l, which it knows is not the end of the line.  When
     we manually give the C-m, followed by RET, it is happy and
     completes parsing the line.

     	For example, from a *shell* buffer running bash (with ps in
     the path):

     	command.com 	ps 	C-q C-m RET 	exit 	C-q C-m RET

     	command.com /c date 	RET 	C-q C-m RET

     	command.com /c date 	C-q C-m RET

   * (RMH) Changes in ess-r-d.el for Windows

     	One of the design goals in ESS was to make it almost
     unnecessary for users to make modifications to the ess-*.el
     files.  We have split the R function into two clones.  	R-unix
     is the old R function.  It uses the starting argument
     "-no-readline ".  R-microsoft is designed for Windows.  It
     uses the starting argument "-ess ".  We detect the
     operating system and fset the name R to whichever is
     appropriate.  No user changes are required.  M-x R         always
     works.

   * (RMH)	msdos.el

     	Start an msdos shell inside an NTemacs that normally uses
     bash as its shell.  It should have been easy, but had many
     parameters that needed to be set.  I am sending a copy of 	this to
     the Ntemacs mailing list.  I think this function 	should be
     merged into the Ntemacs distribution, but for the 	moment I am
     attributing it to us.


